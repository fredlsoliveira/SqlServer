--PROCEDURE ORDEM_PRODUCAO
--OBJETIVO GERAR ORDENS DE PRODUCAO DE ACORDO COM DEMANDA DE VENDAS
--SELECT * FROM PEDIDO_VENDA
--SELECT * FROM PEDIDO_VENDA_ITEM
--SELECT * FROM ORDEM_PRODUCAO
--MAT 1 QTD 35
--MAT 2 QTD 40
--EXEC PROC_PLAN_ORDEM 12,2017

--UPDATE PEDIDO_VENDA SET SITUACAO = 'A'
--WHERE SITUACAO = 'P'

USE MINIERP
GO
CREATE PROCEDURE PROC_PLAN_ORDEM (@MES VARCHAR(2), 
                                  @ANO  VARCHAR(4)) 
AS 
 
BEGIN 
	SET nocount ON 
	DECLARE @ErrorState INT;
BEGIN TRANSACTION 

	/* VERIFICANDO SE EXISTE PEDIDOS ABERTO PARA MES E ANO SELECIONADO */
	IF (
		SELECT COUNT(*)
		FROM PEDIDO_VENDA A
			INNER JOIN PEDIDO_VENDA_ITEM B ON A.NUM_PEDIDO=B.NUM_PEDIDO
		WHERE	A.SITUACAO='A' AND 
				MONTH(A.DATA_ENTREGA)=@MES AND 
				YEAR(A.DATA_ENTREGA)=@ANO)=0
		BEGIN 
			SET @ErrorState=1
		END

	ELSE 
    	BEGIN 
			INSERT INTO ORDEM_PRODUCAO 
			OUTPUT 'ORDEM PLANEJADA' MSG,INSERTED.COD_ORDEM ,INSERTED.COD_MATERIAL
				SELECT	B.COD_MATERIAL,
						SUM(B.QTD) AS QTD_PLAN,
						0 QTD_PRODUCAO, 
						@ANO+'-'+@MES+'-01' AS DATA_INI,
						EOMONTH(@ANO+'-'+@MES+'-01') AS DATA_FIM,'A'
				FROM PEDIDO_VENDA A
					INNER JOIN PEDIDO_VENDA_ITEM B ON A.NUM_PEDIDO=B.NUM_PEDIDO
				WHERE	A.SITUACAO = 'A' AND		--APENAS PEDIDO EM ABERTO
						MONTH(A.DATA_ENTREGA)=@MES AND
						YEAR(A.DATA_ENTREGA)=@ANO
				GROUP BY B.COD_MATERIAL;
			PRINT 'INSERT ORDEM PROD REALIZADO';
 
			UPDATE PEDIDO_VENDA  SET SITUACAO='P'
			OUTPUT 'PEDIDO PLANEJADO' MSG,INSERTED.NUM_PEDIDO,DELETED.SITUACAO DE,INSERTED.SITUACAO PARA
			WHERE	SITUACAO='A' AND
					MONTH(DATA_ENTREGA)=@MES AND
					YEAR(DATA_ENTREGA)=@ANO;
			PRINT 'PEDIDOS SITUACAO ATUALIZADA'; 
	END /* FINAL IF 1 */ 
 

	/* VALIDAÇÃO FINAL */
 	IF @ErrorState=1
		BEGIN
			ROLLBACK
			RAISERROR 
			(
				'NAO EXISTEM MATERIAIS PARA PLANEJ. ORDEM', /* Message text.*/  
				10, /* Severity.*/  
				1	/* State.*/  
			) 
			PRINT 'OPER. CANCELADA ROLLBACK';
        END
	ELSE IF @@ERROR <> 0
		BEGIN
			ROLLBACK
			PRINT 'OPERACAO CANCELADA'
			PRINT @@error 
		END
	ELSE
		BEGIN
		      COMMIT  
		      PRINT 'OPERACAO REALIZADA COM SUCESSO';
     	END
	END /* FINAL IF 2 */ 