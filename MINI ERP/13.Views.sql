
----------- VIEW V_FUNCIONARIO --------------------------------------- 
/*
TABELAS FUNCIONARIO,CARGOS,CENTRO_CUSTO
SELECT * FROM V_FUNCIONARIO
*/

CREATE VIEW V_FUNCIONARIO
AS
SELECT	A.MATRICULA,
		A.COD_CENTRO_CUSTO,
		C.NOME_CENTRO_CUSTO,  
		A.NOME,
		A.COD_CARGO,
		B.NOME_CARGO,
		A.DATA_ADMISSAO,
		A.DATE_DEMISSAO,
		CASE WHEN A.DATE_DEMISSAO='1900-01-01' THEN 'ATIVO'
		ELSE 'DESLIGADO' 
		END SITUACAO
FROM FUNCIONARIO A
		INNER JOIN CARGO B ON A.COD_CARGO = B.COD_CARGO 
		INNER JOIN CENTRO_CUSTO C ON A.COD_CENTRO_CUSTO = C.COD_CENTRO_CUSTO



----------- VIEW V_FATURAMENTO ---------------------------------------
/*NOTA_FISCAL, NOTA_FISCAL_ITENS,MATERIAL,CLIENTES, CIDADES,
SELECT * FROM V_FATURAMENTO
*/

CREATE VIEW V_FATURAMENTO
AS
SELECT	A.NUM_NF,
		A.COD_CLIFOR,
		CAST(A.DATA_EMISSAO AS DATE) DATA_EMISSAO,
		B.COD_MATERIAL,C.DESCRICAO,
		D.RAZAO_SOCIAL,E.NOME_MUNICIPIO,
		B.QTD,B.VALOR_UNITARIO,B.QTD*B.VALOR_UNITARIO TOTAL
FROM NOTA_FISCAL A 
	INNER JOIN NOTA_FISCAL_ITEM B ON A.NUM_NF=B.NUM_NF
	INNER JOIN MATERIAL C ON B.COD_MATERIAL=C.COD_MATERIAL
	INNER JOIN CLIENTE D ON A.COD_CLIFOR=D.COD_CLIENTE
	INNER JOIN CIDADE E ON D.COD_CIDADE=E.COD_CIDADE
WHERE A.TIPO_NF='S'

--CRIAMOS INDICE PARA MELHORAR PERFORMANCE
--CREATE INDEX IX_FAT1 ON NOTA_FISCAL(TIPO_NF)
--EXEC SP_STATISTICS NOTA_FISCAL



----------- VIEW V_NECCESSIDADES ---------------------------------------
/*
ORDEM_PROD,FICHA_TECNICA, ESTOQUE,MATERIAL
SELECT * FROM V_NECCESSIDADES
*/

CREATE VIEW V_NECCESSIDADES
AS
SELECT	A.COD_ORDEM,
		A.COD_MATERIAL,
		A.QTD_PLANEJADA,
		A.QTD_PRODUCAO,
		A.QTD_PLANEJADA-A.QTD_PRODUCAO SALDO,
		B.COD_MAT_NECESSARIO,
		D.DESCRICAO,
		B.QTD_NECESSARIO,
		(A.QTD_PLANEJADA-A.QTD_PRODUCAO)*B.QTD_NECESSARIO QTD_REAL_NEC,
		C.QTD_SALDO,
		CASE WHEN (A.QTD_PLANEJADA-A.QTD_PRODUCAO)*B.QTD_NECESSARIO>C.QTD_SALDO THEN 'FALTA ESTOQUE' ELSE 'OK' END MSG
FROM ORDEM_PRODUCAO A
	INNER JOIN FICHA_TECNICA B ON A.COD_MATERIAL=B.COD_MAT_PRODUZIDO
	INNER JOIN ESTOQUE C ON B.COD_MAT_NECESSARIO=C.COD_MATERIAL
	INNER JOIN MATERIAL D ON B.COD_MAT_NECESSARIO=D.COD_MATERIAL
WHERE (A.QTD_PLANEJADA-A.QTD_PRODUCAO)<>0
	 


----------- VIEW V_CONTAS_PAGAR ---------------------------------------
--CONTAS_PAGAR,FORNECEDORES
--SELECT * FROM V_CONTAS_PAGAR

CREATE VIEW V_CONTAS_PAGAR
AS
SELECT	A.COD_DOC_ORIG,
		A.COD_FORNECEDOR,
		B.RAZAO_SOCIAL,
		A.PARCELA,
		A.DATA_VENCIMENTO,
		A.DATA_PAGTO,A.VALOR,
		CASE WHEN A.DATA_PAGTO IS NULL THEN 'ABERTO' 
		ELSE 'PAGO' 
		END SITUACAO,
		
		CASE WHEN A.DATA_VENCIMENTO>GETDATE() THEN 'NORMAL' 
			 WHEN A.DATA_PAGTO>A.DATA_VENCIMENTO THEN 'PAGTO EF COM ATRASO'
		ELSE 'VENCIDO' 
		END MSG
FROM CONTAS_PAGAR A
	INNER JOIN FORNECEDOR B ON A.COD_FORNECEDOR=B.COD_FORNECEDOR
/*
UPDATE CONTAS_PAGAR SET DATA_PAGTO=GETDATE()
WHERE COD_DOC_ORIG='4' AND PARCELA='1'
*/



----------- VIEW V_CONTAS_RECEBER ---------------------------------------
/*
CONTAS_RECEBER,CLIENTES
SELECT * FROM V_CONTAS_RECEBER
*/

CREATE VIEW V_CONTAS_RECEBER
AS
SELECT	A.COD_DOC_ORIG,
		A.COD_CLIENTE,
		B.RAZAO_SOCIAL,
		A.PARCELA,
		A.DATA_VENCIMENTO,
		A.DATA_PAGTO,
		A.VALOR,
		CASE WHEN A.DATA_PAGTO IS NULL THEN 'ABERTO' 
		ELSE 'PAGO' 
		END SITUACAO,

		CASE WHEN A.DATA_VENCIMENTO>GETDATE() THEN 'NORMAL' 
			 WHEN A.DATA_PAGTO>A.DATA_VENCIMENTO THEN 'PAGTO EM COM ATRASO'
		ELSE 'VENCIDO' 
		END MSG,

		CASE WHEN A.DATA_VENCIMENTO=A.DATA_PAGTO THEN 0
			 WHEN A.DATA_PAGTO>A.DATA_VENCIMENTO THEN CAST(CAST(A.DATA_PAGTO AS DATETIME)-CAST(A.DATA_VENCIMENTO AS DATETIME) AS INT )
		ELSE CAST(GETDATE()-CAST(A.DATA_VENCIMENTO AS DATETIME) AS INT ) 
		END DIAS_ATRASO
FROM CONTAS_RECEBER A
	INNER JOIN CLIENTE B ON A.COD_CLIENTE=B.COD_CLIENTE

/*
UPDATE CONTAS_RECEBER SET DATA_PAGTO=GETDATE()
WHERE COD_DOC_ORIG=2 AND PARCELA=1
*/



----------- VIEW V_CUSTO_PRODUTO ---------------------------------------
/* 
MATERIAL,FICHA_TECNICA
SELECT * FROM V_CUSTO_PRODUTO_DET
*/

CREATE VIEW V_CUSTO_PRODUTO_DET
AS
SELECT	A.COD_MATERIAL,
		A.DESCRICAO,
		B.COD_MAT_NECESSARIO,
		C.DESCRICAO DESCRICAO_MAT_N,
		B.QTD_NECESSARIO,
		C.PRECO_UNITARIO,
		B.QTD_NECESSARIO*C.PRECO_UNITARIO CUSTO_NEC
FROM MATERIAL A
	INNER JOIN FICHA_TECNICA B ON A.COD_MATERIAL=B.COD_MAT_PRODUZIDO
	INNER JOIN MATERIAL C ON B.COD_MAT_NECESSARIO=C.COD_MATERIAL
WHERE A.COD_TIPO_MATERIAL='2'



----------- VIEW V_CUSTO_PRODUTO_RESUMO ---------------------------------------
/*
SELECT * FROM V_CUSTO_PRODUTO_RESUMO
*/

CREATE VIEW V_CUSTO_PRODUTO_RESUMO
AS
SELECT	A.COD_MATERIAL,
		A.DESCRICAO,
--		B.COD_MAT_NECES,
--		C.DESCRICAO DESCRICAO_MAT_N,
--		B.QTD_NECES,
--		C.PRECO_UNIT,
		SUM(B.QTD_NECESSARIO*C.PRECO_UNITARIO) CUSTO,
		A.PRECO_UNITARIO PRECO_VENDA
FROM MATERIAL A
	INNER JOIN FICHA_TECNICA B ON A.COD_MATERIAL=B.COD_MAT_PRODUZIDO
	INNER JOIN MATERIAL C ON B.COD_MAT_NECESSARIO=C.COD_MATERIAL
WHERE A.COD_TIPO_MATERIAL='2'
GROUP BY A.COD_MATERIAL,A.DESCRICAO,A.PRECO_UNITARIO



----------- VIEW V_CANAL_VENDAS ---------------------------------------
/*
CLIENTES,CANAL_VENDAS_G_V,CANAL_VENDAS_V_C
SELECT * FROM V_CANAL_VENDAS
*/

CREATE VIEW V_CANAL_VENDAS
AS
SELECT	A.COD_CLIENTE,
		A.RAZAO_SOCIAL,
		ISNULL(B.COD_VENDEDOR,0)ID_VEND,
		ISNULL(D.NOME,'SEM CANAL')NOME_VEND,
		ISNULL(E.COD_GERENTE,0) ID_GER,
		ISNULL(G.NOME,'SEM CANAL') NOME_GER
FROM CLIENTE A
	LEFT JOIN CANAL_VENDA_V_C B ON A.COD_CLIENTE=B.COD_CLIENTE
	LEFT JOIN VENDEDOR C ON B.COD_VENDEDOR=C.COD_VENDEDOR
	LEFT JOIN FUNCIONARIO D ON C.MATRICULA=D.MATRICULA
	LEFT JOIN CANAL_VENDA_G_V E ON B.COD_VENDEDOR=E.COD_VENDEDOR
	LEFT JOIN GERENTE F ON E.COD_GERENTE=F.COD_GERENTE
	LEFT JOIN FUNCIONARIO G ON F.MATRICULA=G.MATRICULA