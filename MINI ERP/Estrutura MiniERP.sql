-- MINI ERP --
CREATE DATABASE MiniERP


-- ############## DIMENSOES #######################################################################################################################################

-- TABELA UF
CREATE TABLE UF
(
	COD_UF VARCHAR(2) NOT NULL PRIMARY KEY,
	NOME_UF VARCHAR(30) NOT NULL
)

-- TABELA CIDADE
CREATE TABLE CIDADE
(
	COD_CIDADE VARCHAR(7) NOT NULL PRIMARY KEY,
	COD_UF VARCHAR(2) NOT NULL,
	NOME_MUNICIPIO VARCHAR(50) NOT NULL,
	CONSTRAINT FK_CIDADE1 FOREIGN KEY (COD_UF) REFERENCES UF(COD_UF)
)

-- TABELA CLIENTE
CREATE TABLE CLIENTE
(
	COD_CLIENTE INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	RAZAO_SOCIAL VARCHAR(100) NOT NULL,
	FANTASIA VARCHAR(20) NOT NULL,
	ENDERECO VARCHAR(50) NOT NULL,
	COMPLEMENTO VARCHAR(10) NOT NULL,
	BAIRRO VARCHAR(20) NOT NULL,
	COD_CIDADE VARCHAR(7) NOT NULL,
	CEP VARCHAR(8),
	CNPJ_CPF VARCHAR(15),
	TIPO_CLIENTE NCHAR(1) CONSTRAINT CK_TIPOCLI CHECK(TIPO_CLIENTE IN ('F','J')),
	DATA_CADASTRO DATETIME NOT NULL,
	COD_PAGTO INT,
	CONSTRAINT FK_CLIENTE1 FOREIGN KEY (COD_CIDADE) REFERENCES CIDADE(COD_CIDADE)
)

-- TABELA FORNECEDOR
CREATE TABLE FORNECEDOR
(
	COD_FORNECEDOR INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	RAZAO_SOCIAL VARCHAR(100) NOT NULL,
	FANTASIA VARCHAR(20) NOT NULL,
	ENDERECO VARCHAR(50) NOT NULL,
	COMPLEMENTO VARCHAR(10) NOT NULL,
	BAIRRO VARCHAR(20) NOT NULL,
	COD_CIDADE VARCHAR(7) NOT NULL,
	CEP VARCHAR(8),
	CNPJ_CPF VARCHAR(15),
	TIPO_FORNECEDOR NCHAR(1) CONSTRAINT CK_TIPOFOR CHECK(TIPO_FORNECEDOR IN ('F','J')),
	DATA_CADASTRO DATETIME NOT NULL,
	COD_PAGTO INT,
	CONSTRAINT FK_FORNECEDOR1 FOREIGN KEY (COD_CIDADE) REFERENCES CIDADE(COD_CIDADE)
)

-- TABELA TIPO DE MATERIAL
CREATE TABLE TIPO_MATERIAL
(
	COD_TIPO_MATERIAL INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	DESCRICAO VARCHAR(30) NOT NULL
)

-- TABELA MATERIAL
CREATE TABLE MATERIAL
(
	COD_MATERIAL INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	DESCRICAO VARCHAR(30) NOT NULL,
	PRECO_UNITARIO DECIMAL(10,2) NOT NULL,
	COD_TIPO_MATERIAL INT NOT NULL,
	COD_FORNECEDOR INT,
	CONSTRAINT FK_MATERIAL1 FOREIGN KEY (COD_TIPO_MATERIAL) REFERENCES TIPO_MATERIAL(COD_TIPO_MATERIAL),
	CONSTRAINT FK_MATERIAL2 FOREIGN KEY (COD_FORNECEDOR) REFERENCES FORNECEDOR(COD_FORNECEDOR)
)
-- CRIANDO INDEX (MATERIAL)
CREATE INDEX IX_MATERIAL1 ON MATERIAL(COD_TIPO_MATERIAL)



-- ######### PRODUCAO #######################################################################################################################################

-- TABELA ORDEM PRODUCAO
CREATE TABLE ORDEM_PRODUCAO
(
	COD_ORDEM INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	COD_MATERIAL INT NOT NULL,
	QTD_PLANEJADA DECIMAL(10,2) NOT NULL,
	QTD_PRODUCAO DECIMAL(10,2) NOT NULL,
	DATA_INICIO DATE,
	DATA_FIM DATE,
	SITUACAO CHAR(1), --A-ABERTA, P-PLANEJADA -F-FECHADA
    CONSTRAINT FK_ORDEMPRODUCAO1 FOREIGN KEY (COD_MATERIAL) REFERENCES MATERIAL(COD_MATERIAL)
)

-- TABELA APONTAMENTO DE PRODUCAO
CREATE TABLE APONTAMENTO
(
	COD_APONTAMENTO INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	COD_ORDEM INT NOT NULL,
	COD_MATERIAL INT,
	QTD_APONTAMENTO DECIMAL(10,2),
	DATA_APONTAMENTO DATETIME NOT NULL,
	--CAMPO LOTE CRIADO NO FINAL
	--LOGIN, SERA CRIADO APOIS CRIACAO DA TABELA USUARIOS
	CONSTRAINT FK_APONTAMENTO1 FOREIGN KEY (COD_MATERIAL) REFERENCES MATERIAL(COD_MATERIAL),
	CONSTRAINT FK_APONTAMENTO2 FOREIGN KEY (COD_ORDEM) REFERENCES ORDEM_PRODUCAO(COD_ORDEM)
)

-- TABELA FICHA TECNICA
CREATE TABLE FICHA_TECNICA
(
	COD_FICHA_TECNICA INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	COD_MAT_PRODUZIDO INT NOT NULL,
	COD_MAT_NECESSARIO INT NOT NULL,
	QTD_NECESSARIO DECIMAL(10,2) NOT NULL,
	CONSTRAINT FK_FICHATECNICA1 FOREIGN KEY (COD_MAT_PRODUZIDO) REFERENCES MATERIAL(COD_MATERIAL),
	CONSTRAINT FK_FICHATECNICA2 FOREIGN KEY (COD_MAT_NECESSARIO) REFERENCES MATERIAL(COD_MATERIAL)
)

-- TABELA CONSUMO
CREATE TABLE CONSUMO
(
	COD_APONTAMENTO INT NOT NULL,
	COD_MAT_NECESSARIO INT NOT NULL,
	QTD_CONSUMIDA DECIMAL(10,2) NOT NULL,
	LOTE VARCHAR(20) NOT NULL,
	CONSTRAINT FK_CONSUMO1 FOREIGN KEY (COD_MAT_NECESSARIO) REFERENCES MATERIAL(COD_MATERIAL),
	CONSTRAINT FK_CONSUMO2 FOREIGN KEY (COD_APONTAMENTO) REFERENCES APONTAMENTO(COD_APONTAMENTO)
)


-- ######### SUPRIMENTOS #######################################################################################################################################

-- TABELA ESTOQUE
CREATE TABLE ESTOQUE
(
	COD_MATERIAL INT NOT NULL PRIMARY KEY,
	QTD_SALDO DECIMAL(10,2) NOT NULL,
	CONSTRAINT FK_ESTOQUE1 FOREIGN KEY (COD_MATERIAL) REFERENCES MATERIAL(COD_MATERIAL)
)

-- TABELA ESTOQUE LOTE
CREATE TABLE ESTOQUE_LOTE
(
	COD_MATERIAL INT NOT NULL,
	LOTE VARCHAR(20) NOT NULL,
	QTD_LOTE DECIMAL(10,2) NOT NULL,
	CONSTRAINT PK_ESTOQUE_LOTE1 PRIMARY KEY (COD_MATERIAL,LOTE), --PK COMPOSTA
	CONSTRAINT FK_ESTOQUE_LOTE1 FOREIGN KEY (COD_MATERIAL) REFERENCES MATERIAL(COD_MATERIAL)
)

-- TABELA ESTOQUE MOVIMENTACAO
CREATE TABLE ESTOQUE_MOVIMENTACAO
(
	COD_ESTOQUE_MOVIMENTACAO INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	TIPO_ESTOQUE_MOVIMENTACAO VARCHAR(1), --S=SAIDA ,E=ENTRADA
	COD_MATERIAL INT NOT NULL,
	LOTE  VARCHAR(20) NOT NULL,
	QTD DECIMAL(10,2) NOT NULL,
	DATA_ESTOQUE_MOVIMENTACAO DATE NOT NULL,
	DATA_HORA DATETIME NOT NULL,
	CONSTRAINT FK_ESTOQUEMOVIMENTACAO1 FOREIGN KEY (COD_MATERIAL) REFERENCES MATERIAL(COD_MATERIAL)
	--CAMPO LOGIN TABELA ESTOQUE_MOV CRIACAO APOS TABELA USUARIO
)

-- TABELA PEDIDO COMPRA
CREATE TABLE PEDIDO_COMPRA
(
	NUM_PEDIDO INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	COD_FORNECEDOR INT NOT NULL,
	COD_PAGTO INT NOT NULL, --ALTERAR  COD_PAGTO TAB PED_COMPRAS PARA FOREIGN KEY APOS TABELA COND_PAGTO  	
	DATA_PEDIDO DATE NOT NULL,
	DATA_ENTREGA DATE NOT NULL,
	SITUACAO NCHAR(1) NOT NULL,
	TOTAL_PEDIDO DECIMAL(10,2),
	CONSTRAINT FK_PEDIDOCOMPRA1 FOREIGN KEY (COD_FORNECEDOR) REFERENCES FORNECEDOR(COD_FORNECEDOR)
)

-- TABELA PEDIDO COMPRA ITEM
CREATE TABLE PEDIDO_COMPRA_ITEM
(
	NUM_PEDIDO INT NOT NULL,
	SEQ_MATERIAL INT NOT NULL,
	COD_MATERIAL INT NOT NULL,
	QTD INT NOT NULL,
	VALOR_UNITARIO DECIMAL(10,2) NOT NULL,
	CONSTRAINT FK_PEDIDOCOMPRAITEM1 FOREIGN KEY (NUM_PEDIDO) REFERENCES PEDIDO_COMPRA(NUM_PEDIDO),
	CONSTRAINT FK_PEDIDOCOMPRAITEM2 FOREIGN KEY (COD_MATERIAL) REFERENCES MATERIAL(COD_MATERIAL)
)


-- ######### RH #######################################################################################################################################

-- TABELA CENTRO CUSTO
CREATE TABLE CENTRO_CUSTO
(
	COD_CENTRO_CUSTO VARCHAR(4) NOT NULL PRIMARY KEY,
	NOME_CENTRO_CUSTO VARCHAR(20) NOT NULL
)

-- TABELA CARGO
CREATE TABLE CARGO
(
	COD_CARGO INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	NOME_CARGO VARCHAR(50)
)

-- TABELA FUNCIONARIO
CREATE TABLE FUNCIONARIO
(
	MATRICULA INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	COD_CENTRO_CUSTO VARCHAR(4) NOT NULL,
	NOME   VARCHAR(50) NOT NULL,
	RG     VARCHAR(15) NOT NULL,
	CPF    VARCHAR(15) NOT NULL,
	ENDERECO  VARCHAR(50)NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	BAIRRO VARCHAR(50) NOT NULL,
	COD_CIDADE VARCHAR(7) NOT NULL,
	DATA_ADMISSAO DATE NOT NULL,
	DATE_DEMISSAO DATE,
	DATA_NASCIMENTO DATE NOT NULL,
	TELEFONE VARCHAR(15) NOT NULL,
	COD_CARGO INT NOT NULL,
	CONSTRAINT FK_FUNCIONARIO1 FOREIGN KEY (COD_CENTRO_CUSTO) REFERENCES CENTRO_CUSTO(COD_CENTRO_CUSTO),
	CONSTRAINT FK_FUNCIONARIO2 FOREIGN KEY (COD_CIDADE) REFERENCES CIDADE(COD_CIDADE),
	CONSTRAINT FK_FUNCIONARIO3 FOREIGN KEY (COD_CARGO) REFERENCES CARGO(COD_CARGO)
)

-- TABELA SALARIO
CREATE TABLE SALARIO
(
	MATRICULA INT NOT NULL,
	SALARIO DECIMAL(10,2)NOT NULL,
	CONSTRAINT FK_SALARIO1 FOREIGN KEY (MATRICULA) REFERENCES FUNCIONARIO(MATRICULA)
)

-- TABELA FOLHA PAGAMENTO
CREATE TABLE FOLHA_PAGAMENTO
(
	MATRICULA INT NOT NULL,
	TIPO_PGTO NCHAR(1) NOT NULL CONSTRAINT CK_TIPOFOLHAPGTO CHECK(TIPO_PGTO IN ('M','A','F','D','R')),	-- (M-FOLHA,A-ADTO,F-FERIAS,D-13,R-RESC),
	TIPO NCHAR(1)  NOT NULL CONSTRAINT CK_TIPOFOLHA CHECK(TIPO IN ('P','D')),							-- P=PROVENTOS D-DESCONTO
	EVENTO VARCHAR(30) NOT NULL, 
	MES_REFERENCIA VARCHAR(2)NOT NULL,
	ANO_REFERENCIA VARCHAR(4)NOT NULL,
	DATA_PAGTO DATE NOT NULL,
	VALOR DECIMAL(10,2) NOT NULL,
    CONSTRAINT FK_FOLHAPAGAMENTO1 FOREIGN KEY (MATRICULA) REFERENCES FUNCIONARIO(MATRICULA)
)


-- ######### SEGURANCA #######################################################################################################################################

-- TABELA USUARIO
CREATE TABLE USUARIO
(
	LOGIN VARCHAR(30) NOT NULL PRIMARY KEY,
	MATRICULA INT NOT NULL,
	SENHA VARCHAR(32) NOT NULL,
	SITUACAO NCHAR(1) NOT NULL CONSTRAINT CK_SITUACAO CHECK(SITUACAO IN ('A','B')), --A=ATIVO -B BLOQUEADO
	CONSTRAINT FK_USUARIO1 FOREIGN KEY (MATRICULA) REFERENCES FUNCIONARIO(MATRICULA)	
)


-- ######### FINANCEIRO #######################################################################################################################################

-- TABELA CONTAS RECEBER
CREATE TABLE CONTAS_RECEBER
(
	COD_CONTAS_RECEBER INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    COD_CLIENTE INT NOT NULL,
	COD_DOC_ORIG INT NOT NULL, --ALTER CAMPO ID_DOC_ORIG PARA FK TABELA NOTA_FISCAL
	PARCELA INT NOT NULL,
	DATA_VENCIMENTO DATE NOT NULL,
	DATA_PAGTO DATE ,
	VALOR DECIMAL(10,2),
	CONSTRAINT FK_CONTASRECEBER1 FOREIGN KEY (COD_CLIENTE) REFERENCES CLIENTE(COD_CLIENTE)
)

-- TABELA CONTAS PAGAR
CREATE TABLE CONTAS_PAGAR
(
	COD_CONTAS_PAGAR INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    COD_FORNECEDOR INT NOT NULL,
	COD_DOC_ORIG INT NOT NULL, --ALTER CAMPO ID_DOC_ORIG PARA FK TABELA NOTA_FISCAL
	PARCELA INT NOT NULL,
	DATA_VENCIMENTO DATE NOT NULL,
	DATA_PAGTO DATE ,
	VALOR DECIMAL(10,2),
	CONSTRAINT FK_CONTASPAGAR1 FOREIGN KEY (COD_FORNECEDOR) REFERENCES FORNECEDOR(COD_FORNECEDOR)
)

-- TABELA CONDICAO PGTO
CREATE TABLE CONDICAO_PGTO
(
	COD_CONDICAO_PGTO INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	NOME_CONDICAO_PGTO VARCHAR(50) NOT NULL 
)

-- TABELA CONDICAO PGTO DETALHE
CREATE TABLE CONDICAO_PGTO_DETALHE
(
	COD_CONDICAO_PGTO_DETALHE INT NOT NULL,
	PARCELA INT NOT NULL,
	DIAS INT NOT NULL,
	PERCENTUAL DECIMAL(10,2) NOT NULL,--PERCENTUAL DA PARCELA
	CONSTRAINT FK_CONDICAOPGTODETALHE1 FOREIGN KEY (COD_CONDICAO_PGTO_DETALHE) REFERENCES CONDICAO_PGTO(COD_CONDICAO_PGTO)
)


-- ######### COMERCIAL #######################################################################################################################################

-- TABELA PEDIDO VENDAS
CREATE TABLE PEDIDO_VENDA
(
	NUM_PEDIDO INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	COD_CLIENTE INT NOT NULL,
	COD_PGTO INT NOT NULL, 
	DATA_PEDIDO DATE NOT NULL,
	DATA_ENTREGA DATE NOT NULL,
	SITUACAO NCHAR(1) NOT NULL CONSTRAINT CK_SITUACAO_PV CHECK(SITUACAO IN ('A','P','F')),  -- A-ABERTO P-PLANEJADO F-FINALIZADO
	TOTAL_PED DECIMAL(10,2),
	CONSTRAINT FK_PEDIDOVENDA1 FOREIGN KEY (COD_CLIENTE) REFERENCES CLIENTE(COD_CLIENTE), 
	CONSTRAINT FK_PEDIDOVENDA2 FOREIGN KEY (COD_PGTO) REFERENCES CONDICAO_PGTO(COD_CONDICAO_PGTO)
)

-- TABELA PEDIDO VENDA ITEM
CREATE TABLE PEDIDO_VENDA_ITEM
(
	NUM_PEDIDO INT NOT NULL,
	SEQ_MATERIAL INT NOT NULL,
	COD_MATERIAL INT NOT NULL,
	QTD INT NOT NULL,
	VALOR_UNITARIO DECIMAL(10,2) NOT NULL,
	CONSTRAINT FK_PEDIDO_VENDA_ITEM1 FOREIGN KEY (NUM_PEDIDO) REFERENCES PEDIDO_VENDA(NUM_PEDIDO)
)

-- TABELA VENDEDORER
CREATE TABLE VENDEDOR
(
	COD_VENDEDOR INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	MATRICULA INT NOT NULL
 	CONSTRAINT FK_VENDEDOR1 FOREIGN KEY (MATRICULA)	REFERENCES FUNCIONARIO(MATRICULA)	
)

-- TABELA GERENTE
CREATE TABLE GERENTE
(
	COD_GERENTE INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	MATRICULA INT NOT NULL
 	CONSTRAINT FK_GERENTE1 FOREIGN KEY (MATRICULA) REFERENCES FUNCIONARIO(MATRICULA)
)

-- TABELA CANAL VENDAS GERENTE-VENDEDOR
CREATE TABLE CANAL_VENDA_G_V
(
	COD_GERENTE INT NOT NULL,
	COD_VENDEDOR INT,
	CONSTRAINT FK_CANALVENDAGV1 FOREIGN KEY (COD_GERENTE) REFERENCES FUNCIONARIO(MATRICULA),
	CONSTRAINT FK_CANALVENDAGV2 FOREIGN KEY (COD_VENDEDOR) REFERENCES FUNCIONARIO(MATRICULA),
	CONSTRAINT PK_CANALVENDAGV1 PRIMARY KEY (COD_GERENTE,COD_VENDEDOR)
)

-- TABLE CANAL VENDA VENDEDOR-CLIENTE
CREATE TABLE CANAL_VENDA_V_C
(
	COD_VENDEDOR INT NOT NULL,
	COD_CLIENTE INT NOT NULL,
	CONSTRAINT FK_CANALVENDAVC1 FOREIGN KEY (COD_VENDEDOR) REFERENCES FUNCIONARIO(MATRICULA),
	CONSTRAINT FK_CANALVENDAVC2 FOREIGN KEY (COD_CLIENTE) REFERENCES CLIENTE(COD_CLIENTE),
	CONSTRAINT PK_CANALVENDAVC1 PRIMARY KEY (COD_VENDEDOR,COD_CLIENTE)
)

-- TABELA META DE VENDA
CREATE TABLE META_VENDA
(
	COD_VENDEDOR INT NOT NULL,
	ANO VARCHAR(4) NOT NULL,
	MES VARCHAR(2) NOT NULL,
	VALOR DECIMAL(10,2),
	CONSTRAINT FK_METAVENDA1 FOREIGN KEY (COD_VENDEDOR)	REFERENCES FUNCIONARIO(MATRICULA)
)


-- ######### FISCAL #######################################################################################################################################

-- TABELA CFOP (CODIGO DE OPERACOES FISCAIS)
CREATE TABLE CFOP
(
	COD_CFOP VARCHAR(5) NOT NULL PRIMARY KEY,
	DESCRICAO_CFOP VARCHAR(255) NOT NULL
)

-- TABELA NOTA FISCAL
CREATE TABLE NOTA_FISCAL
(
	NUM_NF INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	TIPO_NF NCHAR(1) NOT NULL CONSTRAINT CK_TIPONF CHECK(TIPO_NF IN ('E','S')), -- E-ENTRADA, S-SAIDA
	COD_CFOP VARCHAR(5) NOT NULL,
	COD_CLIFOR INT NOT NULL,
	COD_PGTO INT NOT NULL, 
	DATA_EMISSAO DATETIME NOT NULL,
	DATA_ENTREGA DATE NOT NULL,
	TOTAL_NF DECIMAL(10,2),
	INTEGRADA_FIN CHAR(1) DEFAULT('N'),
	INTEGRADA_SUP CHAR(1) DEFAULT('N'),
	CONSTRAINT FK_NOTAFISCAL1 FOREIGN KEY (COD_CFOP) REFERENCES CFOP(COD_CFOP),
	CONSTRAINT FK_NOTAFISCAL2 FOREIGN KEY (COD_PGTO) REFERENCES CONDICAO_PGTO(COD_CONDICAO_PGTO)
)

-- TABELA NOTA FISCAL ITEM
CREATE TABLE NOTA_FISCAL_ITEM
(
	NUM_NF INT NOT NULL,
	SEQ_MATERIAL INT NOT NULL,
	COD_MATERIAL INT NOT NULL,
	QTD INT NOT NULL,
	VALOR_UNITARIO DECIMAL(10,2) NOT NULL,
	PEDIDO_ORIGEM INT NOT NULL,
	CONSTRAINT FK_NOTAFISCALITEM1 FOREIGN KEY (NUM_NF) REFERENCES NOTA_FISCAL(NUM_NF),
	CONSTRAINT FK_NOTAFISCALITEM2 FOREIGN KEY (COD_MATERIAL) REFERENCES MATERIAL(COD_MATERIAL)
)

-- TABELA PARAMETRO INSS
CREATE TABLE PARAMETRO_INSS
(
	VIGENCIA_INICIO DATE,
	VIGENCIA_FIM DATE,
	VALOR_DE DECIMAL(10,2) NOT NULL,
	VALOR_ATE DECIMAL(10,2) NOT NULL,
	PCT DECIMAL(10,2) NOT NULL
 )

 -- TABELA PARAMETRO IRRF
CREATE TABLE PARAMETRO_IRRF
(
	VIGENCIA_INI DATE,
	VIGENCIA_FIM DATE,
	VALOR_DE DECIMAL(10,2) NOT NULL,
	VALOR_ATE DECIMAL(10,2) NOT NULL,
	PCT DECIMAL(10,2) NOT NULL,
	VAL_ISENT DECIMAL(10,2)
 )

 -- TABELA AUDITORIA SALARIO
CREATE TABLE AUDITORIA_SALARIO
(
	MATRICULA VARCHAR(30) NOT NULL,
	SALARIO_ANTES DECIMAL(10, 2) NOT NULL,
	SALARIO_DEPOIS DECIMAL(10, 2) NOT NULL,
	USUARIO VARCHAR(20) NOT NULL,
	DATA_ATUALIZCAO DATETIME NOT NULL
)



-- ############## ALTERACAO POIS CRIACAO DE TODA ESTRUTURA ########################################################


-- TABELA APONTAMENTO (ALTER)
-- ADD CAMPO LOGIN TABELA [APONTAMENTOS] CRIACAO APOS TABELA [USUARIOS]
ALTER TABLE APONTAMENTO ADD LOGIN VARCHAR(30) NOT NULL
ALTER TABLE APONTAMENTO ADD CONSTRAINT FK_APONTAMENTO3 FOREIGN KEY (LOGIN) REFERENCES USUARIO(LOGIN)
ALTER TABLE APONTAMENTO ADD LOTE VARCHAR(20) NOT NULL


-- TABELA ESTOQUE_MOVIMENTACAO (ALTER)
-- ADD CAMPO LOGIN TABELA [ESTOQUE MOVIMENTACAO] CRIACAO APOS TABELA [USUARIO]
ALTER TABLE ESTOQUE_MOVIMENTACAO ADD LOGIN VARCHAR(30) NOT NULL
ALTER TABLE ESTOQUE_MOVIMENTACAO ADD CONSTRAINT FK_ESTOQUEMOVIMENTACAO2 FOREIGN KEY (LOGIN) REFERENCES USUARIO(LOGIN)


-- TABELA PEDIDO_COMPRA (ALTER)
--ALTERAR COD_PAGTO TABELA [PEDIDO COMPRA] PARA FOREIGN KEY APOS TABELA [CONDICAO PGTO]
ALTER TABLE PEDIDO_COMPRA ADD FOREIGN KEY (COD_PAGTO) REFERENCES CONDICAO_PGTO(COD_CONDICAO_PGTO)


-- TABELA CONTAS_RECEBER (ALTER)
--ALTER TABELA [CONTAS RECEBER] CAMPO ID_DOC_ORIG PARA FK TABELA [NOTA FISCAL]
ALTER TABLE CONTAS_RECEBER ADD FOREIGN KEY (COD_DOC_ORIG) REFERENCES NOTA_FISCAL(NUM_NF)


-- TABELA CONTAS_PAGAR (ALTER)
--ALTER TABELA [CONTAS PAGAR] CAMPO ID_DOC_ORIG PARA FK TABELA [NOTA FISCAL]
ALTER TABLE CONTAS_PAGAR ADD FOREIGN KEY (COD_DOC_ORIG) REFERENCES NOTA_FISCAL(NUM_NF)